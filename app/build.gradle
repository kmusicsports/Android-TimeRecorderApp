plugins {
    id 'com.android.application'
}

apply plugin: 'com.google.android.gms.oss-licenses-plugin'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.test.time_recorder_app"
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 3
        versionName "1.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/NOTICE.md'
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'com.ajts.androidmads.SQLite2Excel:library:1.0.4'

    implementation 'com.sun.mail:android-mail:1.6.6'
    implementation 'com.sun.mail:android-activation:1.6.6'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

}

// ライセンス情報を追加するタスク
task addMyLicenseTask {
    final String UTF_8 = "UTF-8"
    final byte[] LINE_SEPARATOR = System.getProperty("line.separator").getBytes(UTF_8)

    // generateLicensesタスクの直後に起動
    mustRunAfter tasks.findByName('generateLicenses')

    // 手動でライセンス情報を追加する
    doLast {
        def dependencyOutput = new File(project.buildDir, "generated/third_party_licenses")

        def resourceOutput = new File(dependencyOutput, "/res")
        def outputDir = new File(resourceOutput, "/raw")

        // ライセンスファイル
        def licensesFile = new File(outputDir, "third_party_licenses")
        // ライセンスファイルへの書き込み前に現在の位置を保持
        def start = licensesFile.length()

        // ライセンスファイルへ書き込み
        def licenseContent = 'https://oss.oracle.com/licenses/CDDL+GPL-1.1'
        licensesFile << licenseContent
        licensesFile << (LINE_SEPARATOR)

        // ライセンスメタデータファイルに書き込み
        def licensesMetadataFile = new File(outputDir, "third_party_license_metadata")
        licensesMetadataFile << ("${start}:${licenseContent.length()} JavaMail API")
        licensesMetadataFile << (LINE_SEPARATOR)
    }
}

// preBuild前にライセンス情報を追加する
tasks.findByPath(':app:preBuild').dependsOn addMyLicenseTask